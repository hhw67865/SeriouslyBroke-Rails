# Task ID: 7
# Title: Item Management Integration in Categories
# Status: pending
# Dependencies: 1
# Priority: medium
# Description: Enhance the Categories section with integrated Item management, allowing users to manage items directly from category show pages.
# Details:
1. Update the category show view at `app/views/categories/show.html.erb`
2. Add a section for items management within the category context:
```erb
<div class="container mx-auto px-4 py-8">
  <div class="flex items-center mb-6">
    <nav class="text-sm breadcrumbs">
      <ol class="flex space-x-2">
        <li><%= link_to 'Categories', categories_path, class: 'text-gray-500 hover:text-gray-700' %></li>
        <li class="flex items-center">
          <svg class="h-5 w-5 text-gray-400" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"/>
          </svg>
          <span class="ml-2 text-gray-900"><%= @category.name %></span>
        </li>
      </ol>
    </nav>
  </div>
  
  <div class="card mb-6">
    <div class="p-6">
      <div class="flex justify-between items-start">
        <h1 class="text-2xl font-bold"><%= @category.name %></h1>
        <div class="dropdown">
          <!-- Actions dropdown -->
        </div>
      </div>
      <p class="text-gray-600 mt-2"><%= @category.description %></p>
      
      <!-- Category details -->
    </div>
  </div>
  
  <div class="card">
    <div class="p-6">
      <div class="flex justify-between items-center mb-4">
        <h2 class="text-xl font-semibold">Items</h2>
        <%= link_to 'Add Item', new_category_item_path(@category), class: 'btn-primary text-sm', data: { turbo_frame: 'new_item_form' } %>
      </div>
      
      <turbo-frame id="new_item_form"></turbo-frame>
      
      <div class="mt-4">
        <turbo-frame id="items_list">
          <% if @items.any? %>
            <div class="overflow-x-auto">
              <table class="min-w-full divide-y divide-gray-200">
                <thead>
                  <tr>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Name</th>
                    <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Description</th>
                    <th class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                  </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
                  <% @items.each do |item| %>
                    <tr id="<%= dom_id(item) %>" class="hover:bg-gray-50">
                      <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900"><%= item.name %></td>
                      <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500"><%= item.description %></td>
                      <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                        <%= link_to 'Edit', edit_category_item_path(@category, item), class: 'text-primary-dark hover:text-primary mr-3', data: { turbo_frame: 'item_form' } %>
                        <%= link_to 'Delete', category_item_path(@category, item), method: :delete, data: { confirm: 'Are you sure?' }, class: 'text-red-600 hover:text-red-900' %>
                      </td>
                    </tr>
                  <% end %>
                </tbody>
              </table>
            </div>
          <% else %>
            <div class="text-center py-8">
              <p class="text-gray-500">No items in this category yet.</p>
            </div>
          <% end %>
        </turbo-frame>
      </div>
    </div>
  </div>
</div>
```
3. Create new item form at `app/views/items/new.html.erb` with Turbo Frame support
4. Create edit item form at `app/views/items/edit.html.erb` with Turbo Frame support
5. Create a shared form partial at `app/views/items/_form.html.erb`
6. Update ItemsController to handle Turbo Frame requests
7. Implement inline editing using Turbo Frames
8. Add proper routes for nested resources (categories/items)

# Test Strategy:
1. Test adding a new item to a category directly from the category show page
2. Test inline editing of items without leaving the category context
3. Test deleting items with confirmation
4. Verify Turbo Frame functionality works correctly
5. Test form validation and error handling
6. Verify styling matches established patterns
7. Test responsive behavior on mobile devices
