# Task ID: 10
# Title: Standardized Form Components
# Status: pending
# Dependencies: 1
# Priority: high
# Description: Create standardized form components with SimpleForm integration and brand-colored focus states.
# Details:
1. Configure SimpleForm to use custom styling:
```ruby
# config/initializers/simple_form.rb
SimpleForm.setup do |config|
  config.wrappers :default, class: 'form-group' do |b|
    b.use :html5
    b.use :placeholder
    b.use :label, class: 'form-label'
    b.use :input, class: 'form-input', error_class: 'border-red-500'
    b.use :error, wrap_with: { tag: :p, class: 'mt-1 text-sm text-red-600' }
    b.use :hint, wrap_with: { tag: :p, class: 'mt-1 text-sm text-gray-500' }
  end
end
```
2. Add custom form styles to `app/assets/stylesheets/custom.css`:
```css
/* Form styles */
.form-group {
  @apply mb-4;
}

.form-label {
  @apply block text-sm font-medium text-gray-700 mb-1;
}

.form-input {
  @apply block w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring focus:ring-primary focus:ring-opacity-50;
}

.form-select {
  @apply block w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring focus:ring-primary focus:ring-opacity-50;
}

.form-checkbox {
  @apply rounded border-gray-300 text-primary focus:ring-primary;
}

.form-radio {
  @apply border-gray-300 text-primary focus:ring-primary;
}

.form-textarea {
  @apply block w-full rounded-md border-gray-300 shadow-sm focus:border-primary focus:ring focus:ring-primary focus:ring-opacity-50;
}
```
3. Create a shared form layout partial at `app/views/shared/_form_layout.html.erb`:
```erb
<div class="card mb-6">
  <div class="p-6">
    <h2 class="text-xl font-semibold mb-4"><%= title %></h2>
    <%= form_content %>
  </div>
</div>

<div class="flex justify-end space-x-4">
  <%= link_to 'Cancel', cancel_path, class: 'btn-secondary' %>
  <%= submit_button %>
</div>
```
4. Update all form views to use the standardized form components
5. Ensure consistent styling across all forms

# Test Strategy:
1. Verify form components display correctly across all sections
2. Test form validation and error display
3. Verify focus states use brand colors from custom.css
4. Test different input types (text, select, checkbox, etc.)
5. Verify responsive behavior on mobile devices
6. Test form submission and error handling
