# Task ID: 11
# Title: Standardized Table Component
# Status: pending
# Dependencies: 1
# Priority: high
# Description: Create a standardized table component with responsive design, proper spacing, and hover states.
# Details:
1. Create a shared partial at `app/views/shared/_table.html.erb`:
```erb
<div class="overflow-x-auto">
  <table class="min-w-full divide-y divide-gray-200">
    <thead>
      <tr>
        <% columns.each do |column| %>
          <th class="<%= column[:class] || 'px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider' %>">
            <% if column[:sortable] %>
              <%= link_to column[:label], column[:sort_url], class: 'flex items-center group', data: { turbo_action: 'advance' } %>
              <% if column[:sort_direction] %>
                <svg class="ml-1 h-4 w-4 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <% if column[:sort_direction] == 'asc' %>
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 15l7-7 7 7" />
                  <% else %>
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7" />
                  <% end %>
                </svg>
              <% else %>
                <svg class="ml-1 h-4 w-4 text-gray-400 opacity-0 group-hover:opacity-100" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 15l7-7 7 7" />
                </svg>
              <% end %>
            <% else %>
              <%= column[:label] %>
            <% end %>
          </th>
        <% end %>
      </tr>
    </thead>
    <tbody class="bg-white divide-y divide-gray-200">
      <% if items.any? %>
        <% items.each do |item| %>
          <tr id="<%= dom_id(item) if defined?(dom_id) %>" class="hover:bg-gray-50">
            <%= yield item %>
          </tr>
        <% end %>
      <% else %>
        <tr>
          <td colspan="<%= columns.size %>" class="px-6 py-10 text-center text-gray-500">
            <%= empty_message || 'No items found' %>
          </td>
        </tr>
      <% end %>
    </tbody>
  </table>
</div>

<% if defined?(pagy) && pagy.pages > 1 %>
  <div class="mt-4 flex justify-between items-center">
    <p class="text-sm text-gray-700">
      Showing <span class="font-medium"><%= pagy.from %></span> to <span class="font-medium"><%= pagy.to %></span> of <span class="font-medium"><%= pagy.count %></span> results
    </p>
    <%== pagy_nav(pagy) %>
  </div>
<% end %>
```
2. Add custom table styles to `app/assets/stylesheets/custom.css`:
```css
/* Table styles */
.table-container {
  @apply overflow-x-auto;
}

.table {
  @apply min-w-full divide-y divide-gray-200;
}

.table-header {
  @apply px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider;
}

.table-cell {
  @apply px-6 py-4 whitespace-nowrap text-sm text-gray-900;
}

.table-cell-actions {
  @apply px-6 py-4 whitespace-nowrap text-right text-sm font-medium;
}
```
3. Create a Stimulus controller for sortable tables at `app/javascript/controllers/sortable_table_controller.js`
4. Update all table views to use the standardized table component
5. Ensure consistent styling across all tables

# Test Strategy:
1. Verify table component displays correctly across all sections
2. Test sortable columns functionality
3. Test empty state display
4. Verify pagination works correctly
5. Test responsive behavior on mobile devices
6. Verify hover states work correctly
7. Test with various data sets to ensure proper rendering
